# Assignment 7
"""
Given 2 strings, a and b, return the number of the positions where
they contain the same length 2 substring. So "xxcaazz" and "xxbaaz"
yields 3, since the "xx", "aa", and "az" substrings appear in the same
place in both strings.

EXAMPLE:
    string_match('xxcaazz', 'xxbaaz') → 3
    string_match('abc', 'abc') → 2
    string_match('abc', 'axc') → 0

"""

#Your Code Below:
def string_match(a,b):

    # Figure out which string is shorter
    shorter = min(len(a),len(b))
    count = 0
    for i in range(shorter - 1):
        a_sub = a[i: i + 2] # gives us substring of size 2
        b_sub = b[i: i + 2] # gives us substring of size 2
        if a_sub == b_sub:
            count = count + 1
    return count
print(string_match('xxcaazz', 'xxbaaz'))  #→ 3
print(string_match('abc', 'abc'))         #→ 2
print(string_match('abc', 'axc'))         #→ 0

# Assignment 8

"""

Return the sum of the numbers in the list, except ignore sections of
numbers starting with a 7 and extending to the next 8
(every 7 will be followed by at least one 8).
Return 0 for no numbers.

EXAMPLE:
sum78([1, 2, 2]) → 5
sum78([1, 2, 2, 7, 99, 99, 8]) → 5
sum78([1, 1, 7, 8, 2]) → 4

"""

#Your Code Below:
def sum78(nums):
    sum = 0
    inRange = False

    for i in range(len(nums)):
        if nums[i] == 7:
            inRange = True

        if not inRange:
            sum += nums[i]

        if inRange and nums[i] == 8:
            inRange = False

    return sum
print(sum78([1, 2, 2])) #→ 5
print(sum78([1, 2, 2, 7, 99, 99, 8])) #→ 5
print(sum78([1, 1, 7, 8, 2])) #→ 4
